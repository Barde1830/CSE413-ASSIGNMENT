I'll help you with each of these Kotlin tasks. Since I can't directly create screenshots, I'll provide the code solutions along with explanations that you can implement in Android Studio or IntelliJ IDEA.

## Task 1: Hello World
```kotlin
fun main() {
    println("Hello, Jane!")
}
```
**Explanation**: This simple program prints "Hello, Jane!" to the console.

## Task 2: User Input
```kotlin
fun main() {
    print("Enter your name: ")
    val name = readLine()
    print("Enter your age: ")
    val age = readLine()
    println("Hello $name, you are $age years old!")
}
```
**Explanation**: This program reads user input for name and age, then prints a greeting message.

## Task 3: Conditional Statements
```kotlin
fun main() {
    print("Enter a number: ")
    val number = readLine()?.toIntOrNull() ?: 0
    
    if (number % 2 == 0) {
        println("$number is an even number.")
    } else {
        println("$number is an odd number.")
    }
}
```
**Explanation**: The program checks if the input number is divisible by 2 to determine if it's even or odd.

## Task 4: Loops and Ranges
```kotlin
fun main() {
    // Print numbers 1 to 10
    println("Numbers 1 to 10:")
    for (i in 1..10) {
        print("$i ")
    }
    
    // Print even numbers 1 to 20
    println("\nEven numbers 1 to 20:")
    for (i in 1..20) {
        if (i % 2 == 0) {
            print("$i ")
        }
    }
}
```
**Explanation**: Two loops - first prints 1-10, second prints even numbers between 1-20.

## Task 5: Functions
```kotlin
fun sum(a: Int, b: Int): Int {
    return a + b
}

fun main() {
    println("Sum of 5 and 3: ${sum(5, 3)}")
    println("Sum of 10 and 20: ${sum(10, 20)}")
    println("Sum of -5 and 5: ${sum(-5, 5)}")
}
```
**Explanation**: A simple function that adds two numbers, called with different values.

## Task 6: Arrays
```kotlin
fun main() {
    val names = arrayOf("Alice", "Bob", "Charlie", "Diana", "Eve")
    
    for (name in names) {
        println("Hello, $name")
    }
}
```
**Explanation**: Creates an array of names and greets each one in a loop.

## Task 7: Classes and Objects
```kotlin
class Car(val brand: String, val model: String, val year: Int) {
    fun displayDetails() {
        println("Car Details: $brand $model, Year: $year")
    }
}

fun main() {
    val car1 = Car("Toyota", "Corolla", 2020)
    val car2 = Car("Tesla", "Model 3", 2022)
    
    car1.displayDetails()
    car2.displayDetails()
}
```
**Explanation**: A Car class with properties and a method to display details, with two instances created.

## Task 8: Inheritance
```kotlin
open class Person(val name: String, val age: Int) {
    fun displayPersonDetails() {
        println("Name: $name, Age: $age")
    }
}

class Student(name: String, age: Int, val grade: String) : Person(name, age) {
    fun displayStudentDetails() {
        displayPersonDetails()
        println("Grade: $grade")
    }
}

fun main() {
    val student = Student("Jane", 21, "A")
    student.displayStudentDetails()
}
```
**Explanation**: Person base class with Student subclass adding grade property.

## Task 9: Collections and Map
```kotlin
fun main() {
    val studentScores = mapOf(
        "Alice" to 85,
        "Bob" to 65,
        "Charlie" to 72,
        "Diana" to 90,
        "Eve" to 68
    )
    
    println("Students with scores above 70:")
    studentScores.filter { it.value > 70 }.forEach {
        println("${it.key}: ${it.value}")
    }
}
```
**Explanation**: A map of student scores filtered to show only those above 70.

## Task 10: Lambda Expression
```kotlin
fun main() {
    val multiply: (Int, Int) -> Int = { a, b -> a * b }
    
    println("Product of 5 and 3: ${multiply(5, 3)}")
    println("Product of 10 and 20: ${multiply(10, 20)}")
}
```
**Explanation**: A lambda expression that multiplies two numbers, called with different values.

For each task:
1. Copy the code into Android Studio or IntelliJ IDEA
2. Run the program
3. Take a screenshot of:
   - The code window showing the syntax
   - The console/output window showing the results
4. Submit these screenshots as per y
